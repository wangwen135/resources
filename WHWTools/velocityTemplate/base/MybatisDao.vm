/**
 * Copyright(C) 2015-2025 杏仁科技
 * All rights reserved
 * ${date1} Created
 */
package ${packageName}.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.xingren.sdb.components.common.AbstractDao;
import ${packageName}.dao.I${table.className}Dao;
import ${packageName}.model.${table.className}DO;

/**
 * <pre>
 * ${table.remark} DAO接口Mybatis实现
 * 对应数据库表：${table.name}
 * </pre>
 *
 * @author ${author}
 * @date ${date2}
 *
 */
@Repository("${table.lowerClassName}Dao")
public class Mybatis${table.className}Dao extends AbstractDao implements I${table.className}Dao {

    private static final String NAMESPACE = "${packageName}.dao.I${table.className}Dao.";

    @Override
    public int deleteByPrimaryKey(${table.primaryKey.javaClassName} ${table.primaryKey.property}) {
        return getSqlSessionTemplate().delete(NAMESPACE + "deleteByPrimaryKey", ${table.primaryKey.property});
    }

    @Override
    public int insert(${table.className}DO record) {
        return getSqlSessionTemplate().insert(NAMESPACE + "insert", record);
    }

    @Override
    public int insertSelective(${table.className}DO record) {
        return getSqlSessionTemplate().insert(NAMESPACE + "insertSelective", record);
    }

    @Override
    public ${table.className}DO selectByPrimaryKey(${table.primaryKey.javaClassName} ${table.primaryKey.property}) {
        return getSqlSessionTemplate().selectOne(NAMESPACE + "selectByPrimaryKey", ${table.primaryKey.property});
    }

    @Override
    public int updateByPrimaryKeySelective(${table.className}DO record) {
        return getSqlSessionTemplate().update(NAMESPACE + "updateByPrimaryKeySelective", record);
    }

    @Override
    public int updateByPrimaryKey(${table.className}DO record) {
        return getSqlSessionTemplate().update(NAMESPACE + "updateByPrimaryKey", record);
    }

    @Override
    public List<${table.className}DO> selectBySelective(${table.className}DO record) {
        return getSqlSessionTemplate().selectList(NAMESPACE + "selectBySelective", record);
    }

    @Override
    public List<${table.className}DO> selectByLanguage(String language) {
        return getSqlSessionTemplate().selectList(NAMESPACE + "selectByLanguage", language);
    }

    @Override
    public List<${table.className}DO> selectByLangAndCode(String language, String code) {
        Map<String, String> map = new HashMap<String, String>();
        map.put("code", code);
        map.put("language", language);

        return getSqlSessionTemplate().selectList(NAMESPACE + "selectByLangAndCode", map);
    }

    @Override
    public int changeValidByPKey(${table.primaryKey.javaClassName} ${table.primaryKey.property}, int valid) {
        Map<String, Object> map = new HashMap<String, Object>();
        map.put("${table.primaryKey.property}", ${table.primaryKey.property});
        map.put("valid", valid);
        return getSqlSessionTemplate().update(NAMESPACE + "changeValidByPKey", map);
    }

}
