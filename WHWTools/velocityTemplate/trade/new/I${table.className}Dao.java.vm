/**
 * Copyright(C) 2015-2025 杏仁科技
 * All rights reserved
 * ${date1} Created
 */
package ${packageName}.dao;

import java.util.List;

import ${packageName}.model.${table.className}DO;
import com.xingren.sdb.trade.queryobject.${table.className}Query;

/**
 * <pre>
 * ${table.remark} DAO接口
 * </pre>
 *
 * @author ${author}
 * @date ${date2}
 *
 */
public interface I${table.className}Dao {
    /**
     * 根据主键删除
     * 
     * @param ${table.primaryKey.property}
     * @return
     */
    int deleteByPrimaryKey(${table.primaryKey.javaClassName} ${table.primaryKey.property});

    /**
     * 插入
     * 
     * @param record
     * @return
     */
    int insert(${table.className}DO record);

    /**
     * 选择性插入
     * 
     * @param record
     * @return
     */
    int insertSelective(${table.className}DO record);

    /**
     * 根据主键查询
     * 
     * @param ${table.primaryKey.property}
     * @return
     */
    ${table.className}DO selectByPrimaryKey(${table.primaryKey.javaClassName} ${table.primaryKey.property});

    /**
     * 根据主键选择性更新
     * 
     * @param record
     * @return
     */
    int updateByPrimaryKeySelective(${table.className}DO record);

    /**
     * 根据主键更新
     * 
     * @param record
     * @return
     */
    int updateByPrimaryKey(${table.className}DO record);

    /**
     * 根据DO选择性查询
     * 
     * @param record
     * @return
     */
    List<${table.className}DO> selectBySelective(${table.className}DO record);

    /**
     * 根据主键 启用/禁用 记录
     * 
     * @param ${table.primaryKey.property}
     * @param valid
     * @return
     */
    int changeValidByPKey(${table.primaryKey.javaClassName} ${table.primaryKey.property}, int valid);

    /**
     * 根据主键 修改记录状态
     * 
     * @param ${table.primaryKey.property}
     * @param status
     *            信息状态
     * @return
     */
    int changeStatusByPKey(${table.primaryKey.javaClassName} ${table.primaryKey.property}, int status);

    /**
     * <pre>
     * 根据主键 和 状态 查找 有效记录
     * 只查询 if_valid = 1 的有效记录
     * 如果 status 为null 则不作为查询条件
     * </pre>
     * 
     * @param ${table.primaryKey.property}
     *            主键ID
     * @param status
     *            信息状态
     * @return
     */
    ${table.className}DO selectByPrimaryKeyAndStatus(${table.primaryKey.javaClassName} ${table.primaryKey.property}, Integer status);

    /**
     * <pre>
     * 根据帮助信息ID 和 状态 查找 有效记录
     * 只查询 if_valid = 1 的有效记录
     * 如果 status 为null 则不作为查询条件
     * </pre>
     * 
     * @param helpMessageId
     * @param status
     * @return
     */
    List<${table.className}DO> selectByHelpMessageIdAndStatus(Long helpMessageId, Integer status);

    /**
     * <pre>
     * 根据订单ID 和 状态 查找 有效记录
     * 只查询 if_valid = 1 的有效记录
     * 如果 status 为null 则不作为查询条件
     * </pre>
     * 
     * @param orderId
     * @param status
     * @return
     */
    List<${table.className}DO> selectByOrderIdAndStatus(Long orderId, Integer status);

    /**
     * <pre>
     * 根据用户ID查询  分页
     * 按照ID倒序，从最近的开始查
     * 只查询有效的数据，if_valid=1
     * 如果指定分页 needPagination=true 则按照分页查询，默认分页
     * 如果信息状态 status 有值就按照信息状态查，如果没有值就不作为查询条件
     * </pre>
     * 
     * @param query
     *            userId 必须有值
     * @return 可能返回null
     */
    List<${table.className}DO> selectPagingByUserId(${table.className}Query query);

    /**
     * <pre>
     * 查询用户总记录数
     * 只查询有效的数据，if_valid=1
     * 如果status 有值，则作为查询条件
     * </pre>
     * 
     * @param userId
     * @return
     */
    int selectTotalRecordByUserId(Long userId, Integer status);

}